var __extends=this.__extends||function(n,t){function r(){this.constructor=n}for(var i in t)t.hasOwnProperty(i)&&(n[i]=t[i]);r.prototype=t.prototype;n.prototype=new r},Rule=function(n){function t(){n.apply(this,arguments)}return __extends(t,n),t.prototype.apply=function(n){var t=new RadixWalker(n,this.getOptions());return this.applyWithWalker(t)},t.FAILURE_STRING="missing radix parameter",t}(Lint.Rules.AbstractRule),RadixWalker;exports.Rule=Rule;RadixWalker=function(n){function t(){n.apply(this,arguments)}return __extends(t,n),t.prototype.visitCallExpression=function(t){var i=t.expression;i.kind===63&&t.getFirstToken().getText()==="parseInt"&&t.arguments.length<2&&this.addFailure(this.createFailure(t.getStart(),t.getWidth(),Rule.FAILURE_STRING));n.prototype.visitCallExpression.call(this,t)},t}(Lint.RuleWalker)