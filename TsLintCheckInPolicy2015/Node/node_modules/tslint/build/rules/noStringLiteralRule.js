var __extends=this.__extends||function(n,t){function r(){this.constructor=n}for(var i in t)t.hasOwnProperty(i)&&(n[i]=t[i]);r.prototype=t.prototype;n.prototype=new r},Rule=function(n){function t(){n.apply(this,arguments)}return __extends(t,n),t.prototype.apply=function(n){return this.applyWithWalker(new NoStringLiteralWalker(n,this.getOptions()))},t.FAILURE_STRING="object access via string literals is disallowed",t}(Lint.Rules.AbstractRule),NoStringLiteralWalker;exports.Rule=Rule;NoStringLiteralWalker=function(n){function t(){n.apply(this,arguments)}return __extends(t,n),t.prototype.visitElementAccessExpression=function(t){var i=t.argumentExpression,r=i.getText(),u;i.kind===7&&r.length>2&&(u=r.substring(1,r.length-1),this.isValidIdentifier(u)&&this.addFailure(this.createFailure(i.getStart(),i.getWidth(),Rule.FAILURE_STRING)));n.prototype.visitElementAccessExpression.call(this,t)},t.prototype.isValidIdentifier=function(n){var t=ts.createScanner(1,!0,n);return t.scan(),t.getTokenText()===n&&t.isIdentifier()},t}(Lint.RuleWalker)