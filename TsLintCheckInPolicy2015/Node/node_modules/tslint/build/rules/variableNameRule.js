var __extends=this.__extends||function(n,t){function r(){this.constructor=n}for(var i in t)t.hasOwnProperty(i)&&(n[i]=t[i]);r.prototype=t.prototype;n.prototype=new r},OPTION_LEADING_UNDERSCORE="allow-leading-underscore",Rule=function(n){function t(){n.apply(this,arguments)}return __extends(t,n),t.prototype.apply=function(n){var t=new VariableNameWalker(n,this.getOptions());return this.applyWithWalker(t)},t.FAILURE_STRING="variable name must be in camelcase or uppercase",t}(Lint.Rules.AbstractRule),VariableNameWalker;exports.Rule=Rule;VariableNameWalker=function(n){function t(){n.apply(this,arguments)}return __extends(t,n),t.prototype.visitPropertyDeclaration=function(t){t.name!=null&&t.name.kind===63&&this.handleVariableName(t.name);n.prototype.visitPropertyDeclaration.call(this,t)},t.prototype.visitVariableDeclaration=function(t){this.handleVariableName(t.name);n.prototype.visitVariableDeclaration.call(this,t)},t.prototype.visitVariableStatement=function(t){var i=t.modifiers!=null&&t.modifiers.length>0&&t.modifiers[0].kind===112;i||n.prototype.visitVariableStatement.call(this,t)},t.prototype.handleVariableName=function(n){var t=n.text;this.isCamelCase(t)||this.isUpperCase(t)||this.addFailure(this.createFailure(n.getStart(),n.getWidth(),Rule.FAILURE_STRING))},t.prototype.isCamelCase=function(n){var t=n.charAt(0),i=n.substring(1);return n.length<=0?!0:!this.hasOption(OPTION_LEADING_UNDERSCORE)&&t==="_"?!1:t===t.toLowerCase()&&i.indexOf("_")===-1},t.prototype.isUpperCase=function(n){return n===n.toUpperCase()},t}(Lint.RuleWalker)