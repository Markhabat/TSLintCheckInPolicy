var __extends=this.__extends||function(n,t){function r(){this.constructor=n}for(var i in t)t.hasOwnProperty(i)&&(n[i]=t[i]);r.prototype=t.prototype;n.prototype=new r},Rule=function(n){function t(){n.apply(this,arguments)}return __extends(t,n),t.prototype.apply=function(n){return this.applyWithWalker(new NoAnyWalker(n,this.getOptions()))},t.FAILURE_STRING="type decoration of 'any' is forbidden",t}(Lint.Rules.AbstractRule),NoAnyWalker;exports.Rule=Rule;NoAnyWalker=function(n){function t(){n.apply(this,arguments)}return __extends(t,n),t.prototype.visitAnyKeyword=function(t){this.addFailure(this.createFailure(t.getStart(),t.getWidth(),Rule.FAILURE_STRING));n.prototype.visitAnyKeyword.call(this,t)},t}(Lint.RuleWalker)